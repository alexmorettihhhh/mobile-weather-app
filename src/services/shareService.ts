import { Share, Platform } from 'react-native';
import { WeatherData } from '../types/weather';

export class ShareService {
  /**
   * –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥–æ–π
   */
  static async shareWeather(weatherData: WeatherData): Promise<void> {
    try {
      const { location, current } = weatherData;
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±–º–µ–Ω–∞
      const shareText = `–ü–æ–≥–æ–¥–∞ –≤ ${location.name}, ${location.country}\n`
        + `üå°Ô∏è ${Math.round(current.temp_c)}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${Math.round(current.feelslike_c)}¬∞C\n`
        + `${current.condition.text}\n`
        + `üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${current.humidity}%\n`
        + `üí® –í–µ—Ç–µ—Ä: ${current.wind_kph} –∫–º/—á, ${current.wind_dir}\n`
        + `üëÅÔ∏è –í–∏–¥–∏–º–æ—Å—Ç—å: ${current.vis_km} –∫–º\n\n`
        + `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è MobileWeatherApp`;
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –æ–±–º–µ–Ω–∞
      await Share.share({
        message: shareText,
        title: `–ü–æ–≥–æ–¥–∞ –≤ ${location.name}`
      });
    } catch (error) {
      console.error('Error sharing weather data:', error);
      throw error;
    }
  }

  /**
   * –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø–æ–≥–æ–¥–æ–π —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º
   */
  static async shareWeatherWithScreenshot(weatherData: WeatherData, screenshotUri: string): Promise<void> {
    try {
      const { location, current } = weatherData;
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±–º–µ–Ω–∞
      const shareText = `–ü–æ–≥–æ–¥–∞ –≤ ${location.name}, ${location.country}\n`
        + `üå°Ô∏è ${Math.round(current.temp_c)}¬∞C (${current.condition.text})\n`
        + `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è MobileWeatherApp`;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫ –¥–µ–ª–∏—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
      if (Platform.OS === 'ios') {
        // iOS –º–æ–∂–µ—Ç –¥–µ–ª–∏—Ç—å—Å—è –∏ —Ç–µ–∫—Å—Ç–æ–º, –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
        await Share.share({
          message: shareText,
          title: `–ü–æ–≥–æ–¥–∞ –≤ ${location.name}`,
          url: screenshotUri
        });
      } else {
        // Android —Ç—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã –±—ã–ª —É–∫–∞–∑–∞–Ω —Ç–æ–ª—å–∫–æ url –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        await Share.share({
          message: shareText,
          title: `–ü–æ–≥–æ–¥–∞ –≤ ${location.name}`,
          url: screenshotUri
        });
      }
    } catch (error) {
      console.error('Error sharing weather data with screenshot:', error);
      throw error;
    }
  }

  /**
   * –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ–≥–Ω–æ–∑–æ–º –ø–æ–≥–æ–¥—ã
   */
  static async shareWeatherForecast(weatherData: WeatherData): Promise<void> {
    try {
      const { location, forecast } = weatherData;
      
      // –ó–∞–≥–æ–ª–æ–≤–æ–∫
      let shareText = `–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è ${location.name}, ${location.country}\n\n`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
      forecast.forecastday.forEach(day => {
        const date = new Date(day.date);
        const formattedDate = date.toLocaleDateString('ru-RU', { 
          weekday: 'long', 
          month: 'long', 
          day: 'numeric' 
        });
        
        shareText += `üìÖ ${formattedDate}\n`
          + `üå°Ô∏è ${Math.round(day.day.maxtemp_c)}¬∞C / ${Math.round(day.day.mintemp_c)}¬∞C\n`
          + `${day.day.condition.text}\n`
          + `üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${day.day.avghumidity}%\n`
          + `üí® –í–µ—Ç–µ—Ä: –¥–æ ${day.day.maxwind_kph} –∫–º/—á\n`
          + `‚òî –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤: ${day.day.daily_chance_of_rain}%\n\n`;
      });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å
      shareText += `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è MobileWeatherApp`;
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –æ–±–º–µ–Ω–∞
      await Share.share({
        message: shareText,
        title: `–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è ${location.name}`
      });
    } catch (error) {
      console.error('Error sharing weather forecast:', error);
      throw error;
    }
  }
} 